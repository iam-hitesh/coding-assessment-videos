version: '3.7'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  web: &web
    hostname: web
    build: ./app
    volumes:
      - ./app/static:/usr/src/app/static
    expose:
      - "8000"
    ports:
      - 8000:8000
    env_file:
      - ./app/.env
    depends_on:
      - db
    links:
      - db:db
    networks:
      - djangonetwork
    restart: always
  db:
    hostname: db
    build:
      context: .
      dockerfile: postgres/Dockerfile
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev
    networks:
      - djangonetwork
    restart: always
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment: &env
      RABBITMQ_DEFAULT_USER: "fampay"
      RABBITMQ_DEFAULT_PASS: "fampay"
      RABBITMQ_DEFAULT_VHOST: "/"
      CELERY_BROKER_URL: "amqp://fampay:fampay@rabbitmq:5672"
    networks:
      - djangonetwork
    restart: always
  celery:
    build: ./app
    command: celery -A fampay worker -l info
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - ./app/.env
    depends_on:
      - db
      - web
      - rabbitmq
    links:
      - db:db
    networks:
      - djangonetwork
  celery-beat:
    build: ./app
    command: celery -A fampay beat -l info
    volumes:
      - ./app/:/usr/src/app/
    env_file:
      - ./app/.env
    depends_on:
      - db
      - web
      - rabbitmq
    links:
      - db:db
    networks:
      - djangonetwork

networks:
  djangonetwork:
    driver: bridge
